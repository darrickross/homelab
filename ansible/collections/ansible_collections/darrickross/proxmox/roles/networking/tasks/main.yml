# tasks/main.yml
---
# ==============================================================================
# Deploy network interfaces safely
# ==============================================================================
- name: Safely deploy /etc/network/interfaces
  become: true
  block:
    - name: Render validated config (no install if invalid)
      ansible.builtin.template:
        src: interfaces.j2
        dest: "{{ networking_interfaces_dest }}"
        owner: root
        group: root
        mode: "0644"
        backup: true
        # Either of these works; pick what exists on your host
        # validate: "sh -c 'ifquery --interfaces=%s --check'"
        validate: "sh -c 'ifup -n -a -i %s'"
      register: interfaces_template
      notify:
        - Reload networking

  rescue:
    - name: Restore last known good interfaces if we changed it
      when: interfaces_template.backup_file is defined
      become: true
      ansible.builtin.copy:
        src: "{{ interfaces_template.backup_file }}"
        dest: "{{ networking_interfaces_dest }}"
        remote_src: true
        owner: root
        group: root
        mode: "0644"

    - name: Try to revert networking state
      become: true
      ansible.builtin.command:
        cmd: ifreload -a
      register: revert_networking
      changed_when: revert_networking.rc == 0 and "no changes needed" not in revert_networking.stdout
      failed_when: revert_networking.rc != 0 and "no changes needed" not in revert_networking.stdout

    - name: Fail loudly
      ansible.builtin.fail:
        msg: "Invalid or unsafe interfaces config. Restored previous file."

# ==============================================================================
# Run ping tests to make sure settings are good
# ==============================================================================

- name: Ping Verification
  block:
    - name: Detect P2P presence
      ansible.builtin.set_fact:
        p2p_present: "{{ ((networking_p2p0_interface | default(p2p0_interface | default(''))) | trim) != '' }}"

    - name: Ping primary gateway
      ansible.builtin.command:
        argv:
          - ping
          - -c
          - "{{ networking_ping_count }}"
          - "{{ ansible_default_ipv4.gateway }}"
      register: ping_gateway_normal
      changed_when: false
      failed_when: false

    - name: Ping p2p
      when: p2p_present
      ansible.builtin.command:
        argv:
          - ping
          - -c
          - "{{ networking_ping_count }}"
          - "{{ p2p0_peer_address }}"
      register: ping_p2p_normal
      changed_when: false
      failed_when: false

    - name: Ping primary gateway with MTU
      ansible.builtin.command:
        argv:
          - ping
          # Number of tries
          - -c
          - "{{ networking_ping_count }}"
          # Don't Fragment
          - -M
          - do
          # Payload size
          - -s
          - "{{ networking_ping_payload_size }}"
          - "{{ ansible_default_ipv4.gateway }}"
      register: ping_gateway_mtu
      changed_when: false
      failed_when: false

    - name: Ping p2p with MTU
      when: p2p_present
      ansible.builtin.command:
        argv:
          - ping
          # Number of tries
          - -c
          - "{{ networking_ping_count }}"
          # Don't Fragment
          - -M
          - do
          # Payload size
          - -s
          - "{{ networking_ping_payload_size }}"
          - "{{ p2p0_peer_address }}"
      register: ping_p2p0_mtu
      changed_when: false
      failed_when: false

    - name: Assert all ping tests succeeded
      ansible.builtin.assert:
        that:
          - ping_gateway_normal.rc == 0
          - ping_gateway_mtu.rc == 0
          - not p2p_present or ping_p2p_normal.rc == 0
          - not p2p_present or ping_p2p0_mtu.rc == 0
        fail_msg: "One or more ping tests failed."
        success_msg: "All applicable ping tests passed."

- name: Ensure Peer Host Block in /etc/hosts
  when:
    - networking_p2p0_interface is defined
    - networking_p2p0_interface | trim != ""
  become: true
  ansible.builtin.blockinfile:
    path: /etc/hosts
    create: true
    backup: true
    owner: root
    group: root
    mode: "0644"
    marker_begin: "{{ networking_peer_host_block_marker_start }}"
    marker_end: "{{ networking_peer_host_block_marker_end }}"
    block: |
      {{ networking_p2p0_peer_address }} {{ networking_peer_hostname }}.{{ networking_peer_domain }} {{ networking_peer_hostname }}
