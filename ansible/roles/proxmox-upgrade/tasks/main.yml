---
- name: "Gather installed pve-manager version"
  ansible.builtin.shell: set -o pipefail && pveversion -v | grep pve-manager
  args:
    executable: /bin/bash
  register: _pve_raw
  changed_when: false

- name: "Assert we actually saw “pve-manager:” in the output"
  ansible.builtin.assert:
    that:
      - "_pve_raw.stdout is match('pve-manager')"
    fail_msg: "Did not find 'pve-manager' in `pveversion` output: {{ _pve_raw.stdout }}"

- name: Capture Proxmox version number
  ansible.builtin.set_fact:
    current_pve_version: "{{ _pve_raw.stdout | regex_search('([0-9]+(?:\\.[0-9]+)*)') }}"

- name: Show Proxmox version
  ansible.builtin.debug:
    var: current_pve_version

- name: "Assert we captured a proxmox version number"
  ansible.builtin.assert:
    that:
      - current_pve_version is defined
      - current_pve_version != ''
      - current_pve_version is match('^[0-9]+(?:\\.[0-9]+)*$')
    fail_msg: "We did not capture a version number, got '{{ current_pve_version }}' from output: {{ _pve_raw.stdout }}"

- name: "Show current vs desired"
  ansible.builtin.debug:
    msg: "Installed {{ current_pve_version }}, desired {{ desired_pve_version }}"

- name: "Upgrade the system dist"
  when: current_pve_version is version(desired_pve_version, '<')
  block:
    - name: "Update apt cache"
      ansible.builtin.apt:
        update_cache: true

    - name: "Perform dist-upgrade"
      ansible.builtin.apt:
        upgrade: dist
